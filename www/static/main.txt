<h1>Императивная и декларативная парадигмы программирования</h1>
<br>
Существуют две парадигмы программирования: императивная и декларативная. Основной (традиционной) парадигмой программирования является императивное (процедурное) программирование. В рамках императивной парадигмы рассматривается класс языков программирования, в которых программа явно указывает способ получения результата, не определяя ожидаемых свойств результата. Процедура получения результата имеет вид последовательности операций. Отсюда следуют характерные черты императивной программы:
<br>
<br>
• указание логики управления в программе;<br><br>

• определение порядка выполнения операций;<br><br>

• наличие операторов присваивания, выполняющих разрушающее присваивание.<br><br>

Императивная парадигма основана на «фон-неймановской» вычислительной модели, основными параметрами которой являются:<br><br>

• программа состоит из набора команд, которые выполняются последовательно;<br><br>

• поименованные области памяти (концепция переменных как областей памяти, к которым можно обращаться по имени).<br><br>

Концепция памяти как хранилища значений, содержимое которого может обновляться операторами программы, является фундаментальной в императивном программировании.
<br>
<br>
Реализация программы сводится к последовательному выполнению операторов с целью преобразования исходного состояния памяти, то есть значений исходных данных, в заключительное, то есть в результаты. Таким образом, с точки зрения программиста имеются программа и память, причем первая последовательно обновляет содержимое последней.
<br>
<br>
<br>
Принципиально иную вычислительную модель предполагает декларативная парадигма программирования. При использовании декларативного языка в программе в явном виде указывается, какими свойствами должен обладать результат, но не определяется порядок его получения. В идеальном случае декларативная программа будет состоять из предложений, описывающих необходимый результат. Характерно, что в этом случае порядок предложений, определяющих конкретные свойства результата, не имеет значения. В декларативной парадигме отсутствует концепция переменной, как поименованной области памяти, и явное управление. Декларативные языки не привязаны жестко к традиционной фон-неймановской модели вычислений. В большинстве случаев алгоритм достижения необходимого результата может иметь высокую степень параллелизма.
<br>
<br>
Декларативная парадигма программирования реализуется с помощью одного из двух стилей программирования: функционального или логического программирования.


